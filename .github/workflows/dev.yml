name: Appinspect and Unit Test (Dev)

on: workflow_dispatch
      
env:
  MAX_WARNING: 8
  APP_NAME: "NIFI Monitoring for Splunk"

jobs:
  check-apps-version:
    runs-on: ubuntu-latest
    container: kudaw/appinspect:latest
    steps:
      - uses: actions/checkout@v3
      - name: Check app versions are equal
        run: |
          lista=`echo $(for d in $(ls -d nifi*);do cat $d/default/app.conf|grep ^version|awk -F '=' '{gsub(/ /,"");print $2}';done) | tr ' ' '\n' | sort | uniq | tr '\n' ' ' | sed -e 's/[[:space:]]*$//'`
          echo $lista
          count=$(echo $lista | tr ' ' '\n' | wc -l)
          echo $count
          if [ $count -eq 1 ];then echo 'App versions are equals';else echo 'App versions are different';exit -1;fi

  appinspect:
    needs: check-apps-version
    strategy:
      matrix:
        applications: ["nifi_monitoring", "nifi_TA_monitoring"]
    runs-on: ubuntu-latest
    container: kudaw/appinspect:latest
    outputs:
      APP_VERSION: ${{ steps.get_app_id.outputs.APP_VERSION }}
    steps:
    - uses: actions/checkout@v3
    - name: Get APP version
      id: get_app_id
      run: echo "APP_VERSION=$(cat ${{ matrix.applications }}/default/app.conf | grep ^version | awk -F '=' '{gsub(/ /,"");print $2}')" >> $GITHUB_OUTPUT
    - run: echo ${{ steps.get_app_id.outputs.APP_VERSION }}
    #- run: exit 1
    - name: Slim Package
      id: slim_package
      run: slim package ${{ matrix.applications }}
    - name: Slim validate
      id: slim_validate
      run: slim validate ${{ matrix.applications }}-${{ steps.get_app_id.outputs.APP_VERSION }}.tar.gz
    - name: Run AppInspect
      id: run_appinspect
      run: splunk-appinspect inspect ${{ matrix.applications }}-${{ steps.get_app_id.outputs.APP_VERSION }}.tar.gz --output-file appinspect_result.json --mode precert
    - name: Check status appinspect
      run: if [ $(jq '.summary | select(.error>0 or .failure>0 or .warning>${{ env.MAX_WARNING }})' appinspect_result.json | wc -l) -gt 0 ]; then echo "Problems detected";jq '.summary' appinspect_result.json;exit -1; else jq '.summary' appinspect_result.json;fi
    - name: Upload Package
      uses: actions/upload-artifact@v3
      #if: ${{ success() }}
      with:
        name: ${{ matrix.applications }}
        path: ${{ matrix.applications }}-${{ steps.get_app_id.outputs.APP_VERSION }}.tar.gz
        if-no-files-found: error

  unittest:
    needs: appinspect
    runs-on: ubuntu-latest
    container: kudaw/appinspect:latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "TODO"
      